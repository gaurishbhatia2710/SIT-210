
/*
  Name : Gaurish Bhatia
  Student ID : 2110994762
  SIT 210 EMBEDDED SYSTEMS
  Task 3.2C
  REMARKS : THE FOLLOWING IS THE CODE FOR THE IMPLEMENTATION OF THE TASK USING LIGHT INTENSITY SENSOR.


*/


/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/8fbeb1bb-9398-4030-aacb-bac19b96afbc

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String sunlight;
  float lightValue;
  bool lED;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <hp_BH1750.h>// library for the use of BH1750 sensor.
hp_BH1750 sensor;// declaring a variable for the light intensity sensor.






void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);// beginning the serial communication with a baud rate of 9600 hZ.
  pinMode(LED_BUILTIN, OUTPUT);// declaring the pin for LED.

  sensor.begin(BH1750_TO_GROUND);// begining of the communication with the sensor.
  sensor.start();// initializing the sensor for use.
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);// delay for a suitable time in between.

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  lightValue = sensor.getLux();// getting the value of light intensity and storing it in a variable.
  if (lightValue >= 550)// checking if the light intensity is more than 550 lumens(i.e sunlight present).
  {
    sunlight = " Sunlight Present "; // storing the value as present.
    lED = HIGH;// setting the variable as high for blinking of LED.
    Serial.println(lightValue);// printing the value of the light intensity on the serial monitor.
    digitalWrite(LED_BUILTIN, lED);// blink LED.

  }
  else if (lightValue < 550)// checking if the light intensity is less than 550 lumens(i.e sunlight absent).
  {
    sunlight = " Sunlight not present"; // setting as sunlight not present.
    lED = LOW;// setting the variable of LED as low for turning it off.
    Serial.println(lightValue);// printing the value of light intensity
    digitalWrite(LED_BUILTIN, lED);// turning the LED off.
  }




  delay(1000);// a suitable delay in between.
  sensor.start();// intitialising the sensor again.


}



/*
  Since LED is READ_WRITE variable, onLEDChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLEDChange()  {
  // Add your code here to act upon LED change
  digitalWrite(LED_BUILTIN, lED);

}





/*
  Since Sunlight is READ_WRITE variable, onSunlightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSunlightChange()  {
  // Add your code here to act upon Sunlight change
}
